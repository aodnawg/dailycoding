{"body":"precision highp float;\n\nuniform vec2 resolution;\nuniform float time;\nuniform vec2 mouse;\n#define iResolution resolution\n#define iTime time\n#define iMouse mouse\n\n#define MIN_SURF 0.0001\n#define MAX_DIST 300.\n#define MAX_LOOP 1000\n#define PI 3.141593\n\nmat2 rot(float a) {\n  return mat2(cos(a), sin(a), -sin(a), cos(a));\n}\n\nvec3 makeRay(in vec3 ro, in vec3 lookat, in vec2 uv) {\n  float z = .5;\n  vec3 f = normalize(lookat-ro);\n  vec3 r = cross(vec3(0,1,0), f);\n  vec3 u = cross(f, r);\n  vec3 c = ro+f*z;\n  vec3 i = c+r*uv.x+u*uv.y;\n  vec3 rd = normalize(i-ro);\n  return rd;\n}\n\nvec3 fold(vec3 p) {\n  vec3 n = normalize(vec3(1.,0.,13.));\n    p -= 2.0 * min(0.0, dot(p, n)) * n;\n    return p;\n}\n\nfloat sdBox( vec3 p, vec3 b ) {\n  vec3 q = abs(p) - b;\n  return length(p.xy)-1.;\n}\n\nfloat smin( float a, float b, float k ){\n  float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n  return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nvec2 pmod(vec2 p, float r) {\n    float a =  atan(p.x, p.y) + PI/r;\n    float n = PI*2. / r;\n    a = floor(a/n)*n;\n    return p*rot(-a);\n}\n\nfloat map(vec3 p) {\n  p.z += iTime*3.;\n  p.xy *= rot(iTime*.3);\n  p.xy *= rot(p.z*.1);\n  float rs = length(p.xy)-1.;\n  rs = 1.;\n  float s = 2.;\n  float os = 10.;\n  for(int i=0; i<=4; i++) {\n    s *= .6-sin(iTime)*.2-cos(iTime*2.)*.08+sin(iTime*3.)*.04;\n    p.xy = pmod(p.xy, 3.);\n    // p.xy *= rot(p.z*.01);\n\n    p.y -= os*s*2.;\n    rs = min(rs, length(p.xy)-s);\n  }\n  return rs/3.;\n}\n\nvoid main(void) {\n  vec2 uv = (gl_FragCoord.xy-.5*resolution.xy)/resolution.y;\n  float s = time*3.;\n  vec3 ro = vec3(5.,5.,-15.)*1.+vec3(cos(iTime*.7), sin(iTime*.3), 0.)*4.;\n  vec3 lookat = vec3(0);\n\n  // initialize\n  vec3 rd = makeRay(ro, lookat, uv);\n  vec3 col = vec3(0.);\n  float t = 0., stp=0.;\n  vec3 p;\n\n  // ray march\n  for(int i = 0; i <= MAX_LOOP; i++) {\n    p = ro+rd*t;\n    float d = map(p);\n    if(d>MAX_DIST||d<MIN_SURF) break;\n    t += d;\n    stp+=1.;\n  }\n\n  float m = stp/150.;\n  col = vec3(pow(m,1.5));\n\n  col = vec3(m);\n  float fog = pow(t/60., 4.);\n  col = mix(1.-col, vec3(0.), min(1., max(0., fog)));\n\n  gl_FragColor = vec4(col, 1.);\n}"}